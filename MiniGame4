let bgImage;
let stopwatchImage;
let heartsScoreImage;
let explanationImage;
let rabbit0Image, rabbit1Image, rabbit2Image;
let countdown = 7; // 7 seconds countdown
let timerRunning = false; // Flag to control the timer
let currentRabbitImage;
let customFont;
let lastTime = 0; // To keep track of time for countdown
let pressCount = 0; // Variable to keep track of spacebar presses
let countdownFinished = false; // Flag to stop further changes to pressCount and countdown

function preload() {
  // 배경 이미지 로드
  bgImage = loadImage('assets/MiniGame4_Background.png');
  stopwatchImage = loadImage('assets/MiniGame4_Asset_Stopwatch.png');
  heartsScoreImage = loadImage('assets/MiniGame4_Asset_HeartsScore.png');
  explanationImage = loadImage('assets/MiniGame4_Asset_Explanation.png'); // Explanation 이미지 로드
  rabbit0Image = loadImage('assets/MiniGame4_Asset_Rabbit_0.png'); // Rabbit 0 이미지 로드
  rabbit1Image = loadImage('assets/MiniGame4_Asset_Rabbit_1.png'); // Rabbit 1 이미지 로드
  rabbit2Image = loadImage('assets/MiniGame4_Asset_Rabbit_2.png'); // Rabbit 2 이미지 로드
  customFont = loadFont('assets/a두드림E.otf'); // Custom font 로드
}

function setup() {
  // 캔버스 크기를 창 크기로 설정
  createCanvas(windowWidth, windowHeight);
  textFont(customFont); // Apply the custom font
  textSize(48); // Set the font size for the countdown
  currentRabbitImage = rabbit0Image; // Start with Rabbit 0 image at the center
}

function draw() {
  // 배경 이미지 설정
  if (bgImage) {
    image(bgImage, 0, 0, windowWidth, windowHeight); // 이미지 크기를 창 크기에 맞게 조정
  }

  // 스톱워치 이미지 화면 오른쪽 상단 배치, 크기 조정
  if (stopwatchImage) {
    image(stopwatchImage, windowWidth - 80, 10, 55, 60); // 크기 55x60으로 설정
  }

  // 하트 점수 이미지 화면 왼쪽 상단 배치, 크기 조정
  if (heartsScoreImage) {
    image(heartsScoreImage, 10, 10, 90, 30); // 크기 90x30으로 설정
  }

  // 카운트다운 시계처럼 위쪽 고정된 위치에 표시
  if (!timerRunning && countdown === 7) {
    let x = windowWidth / 2; // Centered horizontally
    let y = windowHeight / 3; // Positioned at the top, you can adjust this for different height

    // Display the countdown number at the fixed position 
    fill(139, 69, 10); // Brown color for countdown text
    textAlign(CENTER, CENTER);
    textSize(23);
    text(countdown, x + 271, y - 80); // Display countdown at the fixed position
  }

  // Start countdown when spacebar is pressed
  if (timerRunning && countdown > 0) {
    let x = windowWidth / 2; // Centered horizontally
    let y = windowHeight / 3; // Positioned at the top, you can adjust this for different height

    // Display the countdown number at the fixed position 
    fill(139, 69, 10); // Brown color for countdown text
    textAlign(CENTER, CENTER);
    textSize(23)
    text(countdown, x + 271, y - 80 ); // Display countdown at the fixed position

    // Decrease the countdown every second
    let currentTime = millis(); // Get the current time in milliseconds
    if (currentTime - lastTime >= 1000) { // If 1 second has passed
      countdown--; // Decrease the countdown
      lastTime = currentTime; // Update the last time
    }
  }

  // 카운트다운이 끝나면 타이머가 멈추도록 설정
  if (countdown <= 0 && !countdownFinished) {
    timerRunning = false; // Stop the timer once it hits 0
    countdown = 0; // Ensure countdown is exactly 0
    countdownFinished = true; // Flag to prevent further spacebar presses from changing the count
  }

  // 화면 중앙에 현재 래빗 이미지 표시
  image(currentRabbitImage, windowWidth / 2 - 270, windowHeight / 2 - 170, 540, 300); // Adjust size as needed

  // "Xn ->" 표시
  fill(255, 150, 150); // Text color
  textSize(18); // Set the size for the "Xn ->"
  textAlign(LEFT, TOP); 
  text(`X${pressCount}`, 58, 15); // Display Xn -> at the top-left

  // 설명 이미지가 화면 앞에 보이도록 배치
  if (explanationImage && !timerRunning) {
    image(explanationImage, windowWidth / 2 - 175, windowHeight / 2 , 350, 60); // 크기 350x60으로 설정
  }
}

// 스페이스바가 눌리면 래빗 이미지 변경 및 카운트다운 시작
function keyPressed() {
  if (key === ' ' && !timerRunning && !countdownFinished) { // When spacebar is pressed and the timer is not running
    explanationImage = null; // Hide the explanation image
    countdown = 7; // Reset countdown to 7 seconds
    timerRunning = true; // Start the countdown timer
    countdownFinished = false; // Reset countdown finish flag
    pressCount = 0; // Reset the press count when restarting the game
  }
  
  // Toggle between Rabbit 1 and Rabbit 2 on spacebar press
  if (key === ' ' && timerRunning && !countdownFinished) { // While the timer is running and countdown is not finished
    if (currentRabbitImage === rabbit1Image) {
      currentRabbitImage = rabbit2Image; // Switch to Rabbit 2 image
    } else {
      currentRabbitImage = rabbit1Image; // Switch to Rabbit 1 image
    }

    pressCount++; // Increment the press count each time the spacebar is pressed
  }
}

// 창 크기가 변경되면 캔버스 크기도 변경
function windowResized() {
  resizeCanvas(windowWidth, windowHeight);
}
